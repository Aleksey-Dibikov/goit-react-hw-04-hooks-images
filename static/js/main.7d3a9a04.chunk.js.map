{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Loader/Spinner.module.css","components/Searchbar/Searchbar.module.css","components/Searchbar/Searchbar.js","services/apiServices.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","components/Loader/Loader.js","App.js","index.js"],"names":["module","exports","Searchbar","onSubmit","useState","value","setValue","className","s","SearchForm","e","preventDefault","trim","alert","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","onChange","event","currentTarget","toLowerCase","axios","defaults","baseURL","fetchImages","query","page","a","get","data","ImageGalleryItem","webformatURL","tags","toggleModal","bigImg","src","alt","ImageGalleryItemImage","onClick","ImageGallery","map","el","id","largeImageURL","Button","modalRoot","document","querySelector","Modal","modalImg","closeModal","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","createPortal","Overlay","target","img","Spinner","spinnerWrapper","color","height","width","App","status","setStatus","valueApi","setValueApi","setPage","setQuery","showModal","setShowModal","setModalImg","apiServices","then","hits","scrollTo","top","documentElement","scrollHeight","behavior","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7d3a9a04.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__scYTR\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__3w8Dh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2azcL\",\"Modal\":\"Modal_Modal__4bjYk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__WUGAT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1I2BC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinnerWrapper\":\"Spinner_spinnerWrapper__1SSEI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__1Ip-V\",\"SearchForm\":\"Searchbar_SearchForm__2NkiW\",\"SearchFormButton\":\"Searchbar_SearchFormButton__11rfa\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__q__hk\",\"SearchFormInput\":\"Searchbar_SearchFormInput__1a2Gi\"};","import PropTypes from 'prop-types';\n// import React, { Component } from 'react';\nimport { useState } from 'react';\nimport s from './Searchbar.module.css';\n// import { toast } from 'react-toastify';\n\nfunction Searchbar({onSubmit}) {\n  const [value, setValue] = useState('');\n\n  const handleInputChange = event => {\n    setValue(event.currentTarget.value.toLowerCase())\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (value.trim() === '') {\n      // toast('введите запрос!!!');\n      alert('Bведите запрос!!!');\n      return;\n    }\n    onSubmit(value);\n    setValue('');\n  };\n\n  return (\n    <header className={s.Searchbar}>\n      <form className={s.SearchForm} onSubmit={handleSubmit}>\n        <button type=\"submit\" className={s.SearchFormButton}>\n          <span className={s.SearchFormButtonLabel}>Search</span>\n        </button>\n\n        <input\n          className={s.SearchFormInput}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          onChange={handleInputChange}\n          value={value}\n        />\n      </form>\n    </header>\n  );\n}\n// class Searchbar extends Component {\n//   state = {\n//     value: '',\n//   };\n\n//   handleInputChange = event => {\n//     this.setState({ value: event.currentTarget.value.toLowerCase() });\n//   };\n\n//   handleSubmit = e => {\n//     e.preventDefault();\n\n//     if (this.state.value.trim() === '') {\n//       // toast('введите запрос!!!');\n//       alert('Bведите запрос!!!');\n//       return;\n//     }\n//     this.props.onSubmit(this.state.value);\n//     this.setState({ value: '' });\n//   };\n\n//   render() {\n//     const { value } = this.state;\n//     const { handleSubmit, handleInputChange } = this;\n//     return (\n//       <header className={s.Searchbar}>\n//         <form className={s.SearchForm} onSubmit={handleSubmit}>\n//           <button type=\"submit\" className={s.SearchFormButton}>\n//             <span className={s.SearchFormButtonLabel}>Search</span>\n//           </button>\n\n//           <input\n//             className={s.SearchFormInput}\n//             type=\"text\"\n//             autoComplete=\"off\"\n//             autoFocus\n//             placeholder=\"Search images and photos\"\n//             onChange={handleInputChange}\n//             value={value}\n//           />\n//         </form>\n//       </header>\n//     );\n//   }\n// }\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func,\n  onChange: PropTypes.string,\n};\n\nexport default Searchbar;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://pixabay.com/api/';\nconst API_KEY = '23161944-2a0cfa2ec118e633f18262ab9';\n\naxios.defaults.baseURL = BASE_URL;\n\nconst fetchImages = async (query, page) => {\n  const { data } = await axios.get(\n    `?q=${query}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\n  );\n  //   console.log(data);\n  return data;\n};\n\nexport default fetchImages;\n","import PropTypes from 'prop-types';\n// import React, { Component } from 'react';\nimport s from './ImageGalleryItem.module.css';\n\n\nconst ImageGalleryItem = ({ webformatURL, tags, toggleModal, bigImg }) => {\n  return (\n      <li className={s.ImageGalleryItem}>\n        <img\n          src={webformatURL}\n          alt={tags}\n          className={s.ImageGalleryItemImage}\n          onClick={() => {\n            toggleModal();\n            bigImg();\n          }}\n        />\n      </li>\n    );\n}\n// class ImageGalleryItem extends Component {\n//   render() {\n//     const { webformatURL, tags, toggleModal, bigImg } = this.props;\n//     return (\n//       <li className={s.ImageGalleryItem}>\n//         <img\n//           src={webformatURL}\n//           alt={tags}\n//           className={s.ImageGalleryItemImage}\n//           onClick={() => {\n//             toggleModal();\n//             bigImg();\n//           }}\n//         />\n//       </li>\n//     );\n//   }\n// }\n\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string,\n  tags: PropTypes.string,\n  toggleModal: PropTypes.func,\n  bigImg: PropTypes.func,\n};\n\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\n// import React, { Component } from 'react';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\nimport s from './ImageGallery.module.css';\n\nconst ImageGallery = ({ query, toggleModal, bigImg }) => {\n  return (\n      <ul className={s.ImageGallery}>\n        {query.map(el => (\n          <ImageGalleryItem\n            key={el.id}\n            id={el.id}\n            webformatURL={el.webformatURL}\n            largeImageURL={el.largeImageURL}\n            tags={el.tags}\n            toggleModal={() => toggleModal()}\n            bigImg={() => bigImg(el.id, el.largeImageURL, el.tags)}\n          />\n        ))}\n      </ul>\n    );\n}\n// class ImageGallery extends Component {\n//   render() {\n//     const { query, toggleModal, bigImg } = this.props;\n//     return (\n//       <ul className={s.ImageGallery}>\n//         {query.map(el => (\n//           <ImageGalleryItem\n//             key={el.id}\n//             id={el.id}\n//             webformatURL={el.webformatURL}\n//             largeImageURL={el.largeImageURL}\n//             tags={el.tags}\n//             toggleModal={() => toggleModal()}\n//             bigImg={() => bigImg(el.id, el.largeImageURL, el.tags)}\n//           />\n//         ))}\n//       </ul>\n//     );\n//   }\n// }\n\nImageGallery.propTypes = {\n  query: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      tags: PropTypes.string,\n      webformatURL: PropTypes.string,\n      largeImageURL: PropTypes.string,\n    }),\n  ),\n  bigImg: PropTypes.func,\n  toggleModal: PropTypes.func,\n};\n\nexport default ImageGallery;\n","import PropTypes from 'prop-types';\n// import React, { Component } from 'react';\nimport s from './Button.module.css';\n\nconst Button = ({onClick}) => {\n  return (\n      <button className={s.Button} type=\"button\" onClick={onClick}>\n        Load more\n      </button>\n    );\n}\n// class Button extends Component {\n//   render() {\n//     const { onClick } = this.props;\n//     return (\n//       <button className={s.Button} type=\"button\" onClick={onClick}>\n//         Load more\n//       </button>\n//     );\n//   }\n// }\n\nButton.propTypes = {\n  onClick: PropTypes.func,\n};\n\nexport default Button;\n","import PropTypes from 'prop-types';\n// import React, { Component } from 'react';\nimport { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport s from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nfunction Modal({ modalImg, closeModal }) {\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  });\n\n  const handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      closeModal();\n    }\n  };\n\n  const backDropClick = event => {\n    // console.log('click');\n    if (event.target === event.currentTarget) {\n      closeModal();\n    }\n  };\n\n  return createPortal(\n      <div className={s.Overlay} onClick={backDropClick}>\n        <div className={s.Modal}>\n          <img key={modalImg.id} src={modalImg.img} alt={modalImg.tags} />\n        </div>\n      </div>,\n      modalRoot,\n    );\n};\n\n// class Modal extends Component {\n//   componentDidMount() {\n//     window.addEventListener('keydown', this.handleKeyDown);\n//   }\n//   componentWillUnmount() {\n//     window.removeEventListener('keydown', this.handleKeyDown);\n//   }\n\n//   handleKeyDown = e => {\n//     if (e.code === 'Escape') {\n//       this.props.closeModal();\n//     }\n//   };\n\n//   backDropClick = event => {\n//     // console.log('click');\n//     if (event.target === event.currentTarget) {\n//       this.props.closeModal();\n//     }\n//   };\n\n//   render() {\n//     const { modalImg } = this.props;\n//     return createPortal(\n//       <div className={s.Overlay} onClick={this.backDropClick}>\n//         <div className={s.Modal}>\n//           <img key={modalImg.id} src={modalImg.img} alt={modalImg.tags} />\n//         </div>\n//       </div>,\n//       modalRoot,\n//     );\n//   }\n// }\n\nModal.propTypes = {\n  closeModal: PropTypes.func,\n  modalImg: PropTypes.object,\n};\n\nexport default Modal;\n","import Loader from 'react-loader-spinner';\n// import React, { Component } from 'react';\nimport s from './Spinner.module.css';\n\nconst Spinner = () => {\n  return (\n      <div className={s.spinnerWrapper}>\n        <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={100} width={100} />\n      </div>\n  )\n}\n// class Spinner extends Component {\n//   render() {\n//     return (\n//       // <div className={s.ldsEllipsis}>\n//       //   <div></div>\n//       //   <div></div>\n//       //   <div></div>\n//       //   <div></div>\n//       // </div>\n//       <div className={s.spinnerWrapper}>\n//         <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={100} width={100} />\n//       </div>\n//     );\n//   }\n// }\nexport default Spinner;\n","// import { Component } from 'react';\nimport { useState, useEffect } from 'react';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport apiServices from './services/apiServices';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Button from './components/Button/Button';\nimport Modal from './components/Modal/Modal';\nimport Spinner from './components/Loader/Loader';\n\n//  import { ToastContainer } from 'react-toastify';\n\nimport './App.css';\n\nfunction App() {\n  const [status, setStatus] = useState('init');\n  const [valueApi, setValueApi] = useState('');\n  const [page, setPage] = useState(1);\n  const [query, setQuery] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [modalImg, setModalImg] = useState('');\n\n  useEffect(() => {  \n    if (!valueApi) { return;}\n\n    if (page === 1) {\n      setStatus('pending');\n\n      apiServices(valueApi, page)\n        .then(query => query.hits)\n        .then(query => setQuery(query), setStatus('resolved'));\n    }\n\n    if (page > 1) {\n      setStatus('pending');\n\n      apiServices(valueApi, page)\n        .then(query => query.hits)\n        .then(query => {\n          return (\n            setQuery([...query, ...query]),\n            setStatus('resolved'),\n            window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: 'smooth',\n            })\n          )\n        }\n      );\n    }\n  }, [valueApi, page])\n\n  const handleFormSubmit = value => {\n    setValueApi(value);\n    setPage(1);\n  };\n\n  const btnLoadMore = () => {\n    setPage(page + 1);\n    setStatus('pending');\n  };\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const FindModalImg = (id, img, tags) => {\n    setModalImg({ id: id, img: img, tags: tags })\n  };\n\n  return (\n      <div className=\"App\">\n        <Searchbar onSubmit={handleFormSubmit} />\n        <ImageGallery\n          query={query}\n          toggleModal={toggleModal}\n          bigImg={FindModalImg}\n        />\n        {status === 'pending' && <Spinner />}\n        {query.length > 0 && <Button onClick={btnLoadMore} />}\n        {showModal && <Modal closeModal={toggleModal} modalImg={modalImg} />}\n        {/* <ToastContainer/> */}\n      </div>\n    );\n}\n\n// class App extends Component {\n//   state = {\n//     status: 'init',\n//     valueApi: '',\n//     page: 1,\n//     query: [],\n//     showModal: false,\n//     modalImg: '',\n//   };\n\n//   componentDidUpdate(prevProps, prevState) {\n//     const { valueApi, page, query } = this.state;\n\n//     if (prevState.valueApi !== valueApi) {\n//       this.setState({ status: 'pending' });\n\n//       apiServices(valueApi, page)\n//         .then(query => query.hits)\n//         .then(query => this.setState({ query: query, status: 'resolved' }));\n//     }\n\n//     if (prevState.page !== page && page !== 1) {\n//       this.setState({ status: 'pending' });\n\n//       apiServices(valueApi, page)\n//         .then(query => query.hits)\n//         .then(query =>\n//           this.setState(prevState => ({\n//             query: [...prevState.query, ...query],\n//             status: 'resolved',\n//           })),\n//         );\n//     }\n\n//     if (prevState.query !== query) {\n//       window.scrollTo({\n//         top: document.documentElement.scrollHeight,\n//         behavior: 'smooth',\n//       });\n//     }\n//   }\n\n//   handleFormSubmit = value => {\n//     this.setState({\n//       valueApi: value,\n//       page: 1,\n//     });\n//   };\n\n//   btnLoadMore = () => {\n//     const { page } = this.state;\n//     this.setState({\n//       page: page + 1,\n//       status: 'pending',\n//     });\n//   };\n\n//   toggleModal = () => {\n//     this.setState(({ showModal }) => ({\n//       showModal: !showModal,\n//     }));\n//   };\n\n//   FindModalImg = (id, img, tags) => {\n//     this.setState({ modalImg: { id: id, img: img, tags: tags } });\n//   };\n\n//   render() {\n//     const { handleFormSubmit, toggleModal, FindModalImg, btnLoadMore } = this;\n//     const { query, status, showModal, modalImg } = this.state;\n//     return (\n//       <div className=\"App\">\n//         <Searchbar onSubmit={handleFormSubmit} />\n//         <ImageGallery\n//           query={query}\n//           toggleModal={toggleModal}\n//           bigImg={FindModalImg}\n//         />\n//         {status === 'pending' && <Spinner />}\n//         {query.length > 0 && <Button onClick={btnLoadMore} />}\n//         {showModal && <Modal closeModal={toggleModal} modalImg={modalImg} />}\n//         {/* <ToastContainer/> */}\n//       </div>\n//     );\n//   }\n// }\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}